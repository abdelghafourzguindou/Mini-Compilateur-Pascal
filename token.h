#ifndef KEYWORD_H
#define KEYWORD_H

#include <string.h>

extern int ligne_number;

typedef enum {
    PROGRAM_TOKEN,
    CONST_TOKEN,
    VAR_TOKEN,
    BEGIN_TOKEN,
    END_TOKEN,
    IF_TOKEN,
    THEN_TOKEN,
    WHILE_TOKEN,
    DO_TOKEN,
    READ_TOKEN,
    WRITE_TOKEN,
    PV_TOKEN,
    PT_TOKEN,
    PLUS_TOKEN,
    MOINS_TOKEN,
    MULT_TOKEN,
    DIV_TOKEN,
    VIR_TOKEN,
    EG_TOKEN,
    AFF_TOKEN,
    INF_TOKEN,
    INFEG_TOKEN,
    SUP_TOKEN,
    SUPEG_TOKEN,
    DIFF_TOKEN,
    PO_TOKEN,
    PF_TOKEN,
    FIN_TOKEN,
    NUMBER_TOKEN,
    ID_TOKEN,
    EMPTY_TOKEN,
    ERROR_TOKEN
}token_code_t;


typedef enum {
     ERROR_INDEFINED_TOKEN,
     ERROR_COMMENT_INCOMPLET ,
     ERROR_PROGRAM_TOKEN,
     ERROR_CONST_TOKEN,
     ERROR_VAR_TOKEN,
     ERROR_BEGIN_TOKEN,
     ERROR_END_TOKEN,
     ERROR_IF_TOKEN,
     ERROR_THEN_TOKEN,
     ERROR_WHILE_TOKEN,
     ERROR_DO_TOKEN,
     ERROR_READ_TOKEN,
     ERROR_WRITE_TOKEN,
     ERROR_PV_TOKEN,
     ERROR_PT_TOKEN,
     ERROR_PLUS_TOKEN,
     ERROR_MOINS_TOKEN,
     ERROR_MULT_TOKEN,
     ERROR_DIV_TOKEN,
     ERROR_VIR_TOKEN,
     ERROR_EG_TOKEN,
     ERROR_AFF_TOKEN,
     ERROR_INF_TOKEN,
     ERROR_INFEG_TOKEN,
     ERROR_SUP_TOKEN,
     ERROR_SUPEG_TOKEN,
     ERROR_DIFF_TOKEN,
     ERROR_PO_TOKEN,
     ERROR_PF_TOKEN,
     ERROR_FIN_TOKEN,
     ERROR_NUMBER_TOKEN,
     ERROR_ID_TOKEN,
} error_code_t;


char* Error_code[32];
char* Token_code[32];

void print_error(error_code_t);

token_code_t IsKeyWord(char*);

#endif // KEYWORD_H
